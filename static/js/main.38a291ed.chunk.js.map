{"version":3,"sources":["reportWebVitals.ts","redux/types.ts","api/api.ts","redux/actions/appActions.ts","utils/getCorrectDate.tsx","components/common/Modal/Modal.tsx","img/logo.svg","img/logo2.svg","components/NavBar/NavBar.tsx","components/common/alerts/Alert.tsx","components/common/widgets/Widgets .tsx","components/Characters/CharactersList.tsx","components/Episodes/EpisodesList.tsx","components/Locations/LocationsList.tsx","components/common/Pagination/Pagination.tsx","components/common/Preloader/Preloader.tsx","components/common/container/Container.tsx","components/Characters/CharactersPage.tsx","components/Episodes/EpisodesPage.tsx","components/Locations/LocationsPage.tsx","components/WatchList/WatchListForm.tsx","components/WatchList/WatchList.tsx","components/WatchList/MyWatchListPage.tsx","Routes.tsx","App.tsx","redux/reducers/app.ts","redux/reducers/characters.ts","redux/reducers/episodes.ts","redux/reducers/locations.ts","redux/reducers/rootReducer.ts","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","FETCH_CHARACTERS","SET_INFORMATION_CHARACTERS","FETCH_EPISODES","SET_INFORMATION_EPISODES","FETCH_LOCATIONS","SET_INFORMATION_LOCATIONS","SET_LOADING","SET_MODAL_SHOW","SET_MODAL_DATA","SET_FILTER_TYPES","SET_FILTER_INPUT","SET_SHOW_ALERT","baseURL","request","url","a","method","body","JSON","stringify","fetch","resp","json","data","ok","API","type","page","filters","filterInputs","filtersUrl","map","filter","toLowerCase","value","join","key","FetchData","dispatch","results","info","payload","characters","information","episodes","locations","length","show","text","count","setTimeout","error","setModalShow","setFilterTypes","label","checked","getCorrectDate","date","Date","toLocaleString","weekday","year","month","day","ModalWindow","useSelector","state","app","modalShow","modalData","prettyDate","created","useDispatch","handleClose","Modal","size","onHide","animation","Header","closeButton","Title","name","Body","Row","Col","className","src","image","alt","ListGroup","variant","Item","species","gender","status","location","Footer","Button","onClick","NavBar","Navbar","bg","expand","Container","Brand","href","logo","logo2","Toggle","Collapse","Nav","activeClassName","to","Alerts","alertData","Alert","Widgets","React","memo","useState","open","setOpen","filterTypes","filtersTitles","Object","keys","onSearchChange","inputs","setFilterInput","keyPressHandler","event","undefined","charactersFiltersData","i","Card","id","e","in","Form","Check","some","onChange","includeFilter","types","onFilter","Label","InputGroup","Text","FormControl","target","placeholder","onKeyPress","CharactersList","charactersPage","onClickHandler","character","Gender","Status","Species","Img","EpisodesList","episodesPage","episode","Table","striped","bordered","hover","air_date","LocationsList","locationsPage","dimension","PaginationComponent","totalPages","onPageChange","activePage","getRange","from","step","range","push","slice","toUpperCase","Pagination","First","disabled","Prev","active","Ellipsis","Next","Last","PreLoader","MainContainer","setActivePage","loading","useEffect","CharactersPage","pages","EpisodesPage","LocationsPage","WatchListForm","props","ref","useRef","htmlFor","onAdd","current","WatchList","toDos","onRemove","onToggle","classes","completed","bind","title","preventDefault","removeHandler","MyWatchListPage","watchList","setWatchList","saved","parse","localStorage","getItem","setItem","newWatchListItem","now","prev","confirm","Routes","path","exact","component","App","fluid","initialState","charactersFilter","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38a291ed.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const FETCH_CHARACTERS = 'CHARACTERS/FETCH_CHARACTERS';\r\nexport const SET_INFORMATION_CHARACTERS = 'CHARACTERS/SET_INFORMATION';\r\n\r\nexport const FETCH_EPISODES = 'EPISODES/FETCH_EPISODES';\r\nexport const SET_INFORMATION_EPISODES = 'EPISODES/SET_INFORMATION';\r\n\r\nexport const FETCH_LOCATIONS = 'LOCATIONS/FETCH_LOCATIONS';\r\nexport const SET_INFORMATION_LOCATIONS = 'LOCATIONS/SET_INFORMATION';\r\n\r\nexport const SET_LOADING = 'APP/SET_LOADING';\r\nexport const SET_MODAL_SHOW = 'APP/SET_MODAL_SHOW';\r\nexport const SET_MODAL_DATA = 'APP/SET_MODAL_DATA';\r\nexport const SET_FILTER_TYPES = 'APP/SET_FILTER_TYPES';\r\nexport const SET_FILTER_INPUT = 'APP/SET_FILTER_INPUT';\r\nexport const SET_SHOW_ALERT = 'APP/SET_SHOW_ALERT';\r\n","import { filterType } from '../redux/actions/actionsTypes';\r\n\r\ntype methods = 'GET' | 'PUT' | 'POST' | 'DELETE';\r\n\r\nconst baseURL = 'https://rickandmortyapi.com/api';\r\n\r\nexport const request = async (\r\n\turl: string,\r\n\tmethod: methods = 'GET',\r\n\tbody: string | null = null\r\n) => {\r\n\ttry {\r\n\t\tif (body) {\r\n\t\t\tbody = JSON.stringify(body);\r\n\t\t}\r\n\t\tconst resp = await fetch(`${baseURL}/${url}`, {\r\n\t\t\tmethod,\r\n\t\t\tbody,\r\n\t\t});\r\n\t\tconst data = await resp.json();\r\n\r\n\t\tif (!resp.ok) {\r\n\t\t\treturn data || 'Something went wrong ';\r\n\t\t}\r\n\t\treturn data;\r\n\t} catch (e) {\r\n\t\treturn e;\r\n\t}\r\n};\r\n\r\nexport const API = {\r\n\tasync getData(\r\n\t\ttype: string,\r\n\t\tpage: number = 1,\r\n\t\tfilters?: {\r\n\t\t\tfilter: string;\r\n\t\t\tvalue: string;\r\n\t\t}[],\r\n\t\tfilterInputs?: filterType\r\n\t) {\r\n\t\tlet filtersUrl = `${\r\n\t\t\tfilters\r\n\t\t\t\t? filters\r\n\t\t\t\t\t\t.map(\r\n\t\t\t\t\t\t\t(filter) =>\r\n\t\t\t\t\t\t\t\t`&${filter.filter.toLowerCase()}=${filter.value.toLowerCase()}`\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t.join('')\r\n\t\t\t\t: ''\r\n\t\t}`;\r\n\r\n\t\tif (filterInputs) {\r\n\t\t\tfor (let key in filterInputs) {\r\n\t\t\t\tif (filterInputs[key]) {\r\n\t\t\t\t\tfiltersUrl += `&${key.toLowerCase()}=${filterInputs[key]}`;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase 'characters':\r\n\t\t\t\treturn await request(`character?page=${page}${filtersUrl}`, 'GET');\r\n\t\t\tcase 'episodes':\r\n\t\t\t\treturn await request(`episode?page=${page}${filtersUrl}`, 'GET');\r\n\t\t\tcase 'locations':\r\n\t\t\t\treturn await request(`location?page=${page}${filtersUrl}`, 'GET');\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t},\r\n};\r\n","import { ITCharacter } from './../../types/interfaces';\r\nimport {\r\n\tFETCH_CHARACTERS,\r\n\tFETCH_EPISODES,\r\n\tFETCH_LOCATIONS,\r\n\tSET_FILTER_INPUT,\r\n\tSET_FILTER_TYPES,\r\n\tSET_INFORMATION_CHARACTERS,\r\n\tSET_INFORMATION_EPISODES,\r\n\tSET_INFORMATION_LOCATIONS,\r\n\tSET_LOADING,\r\n\tSET_MODAL_DATA,\r\n\tSET_MODAL_SHOW,\r\n\tSET_SHOW_ALERT,\r\n} from './../types';\r\nimport { API } from './../../api/api';\r\nimport { CurrentDispatchTypeGetData, filterType } from './actionsTypes';\r\n\r\ntype filter = {\r\n\tfilter: string;\r\n\tvalue: string;\r\n};\r\n\r\nexport const FetchData =\r\n\t(type: string, page?: number, filters?: filter[], filterInputs?: filterType) =>\r\n\tasync (dispatch: CurrentDispatchTypeGetData) => {\r\n\t\tconst data = await API.getData(type, page, filters, filterInputs);\r\n\t\tconst { results, info } = data;\r\n\r\n\t\tif (results && info) {\r\n\t\t\tdispatch({ type: SET_LOADING, payload: true });\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase 'characters':\r\n\t\t\t\t\tdispatch({ type: FETCH_CHARACTERS, characters: results });\r\n\t\t\t\t\tdispatch({ type: SET_INFORMATION_CHARACTERS, information: info });\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'episodes':\r\n\t\t\t\t\tdispatch({ type: FETCH_EPISODES, episodes: results });\r\n\t\t\t\t\tdispatch({ type: SET_INFORMATION_EPISODES, information: info });\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'locations':\r\n\t\t\t\t\tdispatch({ type: FETCH_LOCATIONS, locations: results });\r\n\t\t\t\t\tdispatch({ type: SET_INFORMATION_LOCATIONS, information: info });\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tdispatch({ type: SET_LOADING, payload: false });\r\n\r\n\t\t\tif (filters?.length || filterInputs?.length) {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: SET_SHOW_ALERT,\r\n\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\ttype: 'success',\r\n\t\t\t\t\t\ttext: `We have found ${info.count} results`,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\ttype: SET_SHOW_ALERT,\r\n\t\t\t\t\t\tvalue: { show: false, type: '', text: '' },\r\n\t\t\t\t\t});\r\n\t\t\t\t}, 6000);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: SET_SHOW_ALERT,\r\n\t\t\t\tvalue: { show: true, type: 'danger', text: data.error },\r\n\t\t\t});\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: SET_SHOW_ALERT,\r\n\t\t\t\t\tvalue: { show: false, type: '', text: '' },\r\n\t\t\t\t});\r\n\t\t\t}, 6000);\r\n\t\t}\r\n\t};\r\n\r\nexport const setModalShow = (value: boolean) => ({\r\n\ttype: SET_MODAL_SHOW,\r\n\tpayload: value,\r\n});\r\nexport const setModalData = (value: ITCharacter) => ({\r\n\ttype: SET_MODAL_DATA,\r\n\tdata: value,\r\n});\r\n\r\nexport const setFilterTypes = (\r\n\tfilter: string,\r\n\tlabel: string,\r\n\tchecked: boolean\r\n) => ({ type: SET_FILTER_TYPES, filter, value: label, checked });\r\n\r\nexport const setFilterInput = (filter: string, inputs: string) => ({\r\n\ttype: SET_FILTER_INPUT,\r\n\tfilter,\r\n\tinputs,\r\n});\r\n","export const getCorrectDate = (date: string): string => {\r\n\treturn new Date(date).toLocaleString('en-US', {\r\n\t\tweekday: 'long',\r\n\t\tyear: 'numeric',\r\n\t\tmonth: 'long',\r\n\t\tday: 'numeric',\r\n\t});\r\n};\r\n","import React from 'react';\r\nimport { Modal, Button, Row, Col, ListGroup } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { setModalShow } from '../../../redux/actions/appActions';\r\nimport { AppStateType } from '../../../redux/reducers/rootReducer';\r\nimport { getCorrectDate } from '../../../utils/getCorrectDate';\r\n\r\nexport const ModalWindow: React.FC = () => {\r\n\tconst show = useSelector((state: AppStateType) => state.app.modalShow);\r\n\tconst data = useSelector((state: AppStateType) => state.app.modalData);\r\n\tconst prettyDate = getCorrectDate(data.created);\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst handleClose = () => dispatch(setModalShow(false));\r\n\treturn (\r\n\t\t<Modal show={show} size=\"lg\" onHide={handleClose} animation={true}>\r\n\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t<Modal.Title>{data.name}</Modal.Title>\r\n\t\t\t</Modal.Header>\r\n\r\n\t\t\t<Modal.Body>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col className=\"col-12 col-md-6 col-lg-5\">\r\n\t\t\t\t\t\t<img src={data.image} alt={data.name} className=\"card-image\" />\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<ListGroup variant=\"flush\">\r\n\t\t\t\t\t\t\t<ListGroup.Item>Species: {data.species}</ListGroup.Item>\r\n\t\t\t\t\t\t\t<ListGroup.Item>Gender: {data.gender}</ListGroup.Item>\r\n\t\t\t\t\t\t\t<ListGroup.Item>Status: {data.status}</ListGroup.Item>\r\n\t\t\t\t\t\t\t<ListGroup.Item>Created: {prettyDate}</ListGroup.Item>\r\n\t\t\t\t\t\t\t<ListGroup.Item>Location: {data.location?.name}</ListGroup.Item>\r\n\t\t\t\t\t\t</ListGroup>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Modal.Body>\r\n\r\n\t\t\t<Modal.Footer>\r\n\t\t\t\t<Button variant=\"secondary\" onClick={handleClose}>\r\n\t\t\t\t\tClose\r\n\t\t\t\t</Button>\r\n\t\t\t</Modal.Footer>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n","export default __webpack_public_path__ + \"static/media/logo.fbfd55b1.svg\";","export default __webpack_public_path__ + \"static/media/logo2.989479d8.svg\";","import React from 'react';\r\nimport { Container, Nav, Navbar } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport logo from '../../img/logo.svg';\r\nimport logo2 from '../../img/logo2.svg';\r\n\r\nexport const NavBar: React.FC = () => {\r\n\treturn (\r\n\t\t<Navbar bg=\"light\" expand=\"lg\" className=\"py-0\">\r\n\t\t\t<Container>\r\n\t\t\t\t<Navbar.Brand href=\"/\" className=\"d-flex align-items-center\">\r\n\t\t\t\t\t<img src={logo} className=\"logo\" alt=\"Logo\" />\r\n\t\t\t\t\t<h5 className=\"m-0 mx-3\">Rick and Morty</h5>\r\n\t\t\t\t\t<img src={logo2} className=\"logo\" alt=\"Logo\" />\r\n\t\t\t\t</Navbar.Brand>\r\n\t\t\t\t<Navbar.Toggle />\r\n\t\t\t\t<Navbar.Collapse className=\"mx-5\">\r\n\t\t\t\t\t<Nav className=\"ms-auto\">\r\n\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\tclassName=\"mx-3 app-link\"\r\n\t\t\t\t\t\t\tactiveClassName=\"active-link\"\r\n\t\t\t\t\t\t\tto=\"/characters-list\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tCharacters\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\tclassName=\"mx-3 app-link\"\r\n\t\t\t\t\t\t\tactiveClassName=\"active-link\"\r\n\t\t\t\t\t\t\tto=\"/episodes\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tEpisodes\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\tclassName=\"mx-3 app-link\"\r\n\t\t\t\t\t\t\tactiveClassName=\"active-link\"\r\n\t\t\t\t\t\t\tto=\"/locations\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tLocations\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\tclassName=\"mx-3 app-link\"\r\n\t\t\t\t\t\t\tactiveClassName=\"active-link\"\r\n\t\t\t\t\t\t\tto=\"/my-watch-list\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tMy watch list\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t</Nav>\r\n\t\t\t\t</Navbar.Collapse>\r\n\t\t\t</Container>\r\n\t\t</Navbar>\r\n\t);\r\n};\r\n","import { Alert } from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { AppStateType } from '../../../redux/reducers/rootReducer';\r\n\r\nexport const Alerts = () => {\r\n\tconst alertData = useSelector((state: AppStateType) => state.app.alertData);\r\n\tconst { show, type, text } = alertData;\r\n\tif (show) {\r\n\t\treturn (\r\n\t\t\t<Alert variant={type} className=\"alert my-3\">\r\n\t\t\t\t{text}!\r\n\t\t\t</Alert>\r\n\t\t);\r\n\t}\r\n\treturn null;\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Card, Collapse, Form, FormControl, InputGroup } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport {\r\n\tFetchData,\r\n\tsetFilterInput,\r\n\tsetFilterTypes,\r\n} from '../../../redux/actions/appActions';\r\nimport { AppStateType } from '../../../redux/reducers/rootReducer';\r\n\r\ntype charactersFiltersDataTypes = {\r\n\tGender: string[];\r\n\tStatus: string[];\r\n\tSpecies: string[];\r\n};\r\n\r\ntype episodesFiltersDataType = {\r\n\tname: string;\r\n\tepisode: string;\r\n};\r\n\r\ntype locationsFiltersDataType = {\r\n\tname: string;\r\n\ttype: string;\r\n\tdimension: string;\r\n};\r\n\r\ninterface WidgetsProps {\r\n\ttype: string;\r\n\tdata:\r\n\t\t| charactersFiltersDataTypes\r\n\t\t| episodesFiltersDataType\r\n\t\t| locationsFiltersDataType;\r\n}\r\n\r\nexport const Widgets: React.FC<WidgetsProps> = React.memo(({ type, data }) => {\r\n\tconst [open, setOpen] = useState(true);\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst filterTypes = useSelector(\r\n\t\t(state: AppStateType) => state.app.filterTypes\r\n\t);\r\n\tconst filterInputs = useSelector(\r\n\t\t(state: AppStateType) => state.app.filterInputs\r\n\t);\r\n\r\n\tconst filtersTitles = Object.keys(data) as (keyof typeof data)[];\r\n\r\n\tconst onFilter = (\r\n\t\te: React.ChangeEvent<HTMLInputElement>,\r\n\t\tlabel: string,\r\n\t\tfilter: string\r\n\t) => {\r\n\t\tconst includeFilter = filterTypes.some((filter) => filter.value === label);\r\n\t\tlet types = filterTypes;\r\n\r\n\t\tif (!includeFilter) {\r\n\t\t\tdispatch(setFilterTypes(filter, label, true));\r\n\t\t\ttypes = [...filterTypes, { filter, value: label }];\r\n\t\t} else {\r\n\t\t\tdispatch(setFilterTypes(filter, label, false));\r\n\t\t\ttypes = filterTypes.filter((filter) => filter.value !== label);\r\n\t\t}\r\n\r\n\t\tdispatch(FetchData(type, undefined, types));\r\n\t};\r\n\r\n\tconst onSearchChange = (label: string, filter: string) => {\r\n\t\tdispatch(setFilterInput(filter, label));\r\n\t};\r\n\r\n\tconst keyPressHandler = (event: React.KeyboardEvent) => {\r\n\t\tif (event.key === 'Enter') {\r\n\t\t\tdispatch(FetchData(type, undefined, undefined, filterInputs));\r\n\t\t}\r\n\t};\r\n\r\n\tconst charactersFiltersData = [\r\n\t\t['Male', 'Female', 'Genderless'],\r\n\t\t['Alive', 'Dead', 'Unknown'],\r\n\t\t['Human', 'Alien', 'Unknown'],\r\n\t]\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{type === 'characters' &&\r\n\t\t\t\tfiltersTitles.map((filter: keyof typeof data, i: number) => (\r\n\t\t\t\t\t<Card className=\"my-1 shadow-sm\" key={filter}>\r\n\t\t\t\t\t\t<Card.Header className=\"d-flex justify-content-between\">\r\n\t\t\t\t\t\t\t<h6>{filter}</h6>\r\n\t\t\t\t\t\t\t<span className=\"ml-auto\" id={filter} onClick={(e) => setOpen(!open)}>\r\n\t\t\t\t\t\t\t\t<i className=\"fas fa-chevron-down\"></i>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</Card.Header>\r\n\t\t\t\t\t\t<Collapse in={open} className=\"collapse\">\r\n\t\t\t\t\t\t\t<Card.Body className=\"widget-content\">\r\n\t\t\t\t\t\t\t\t{charactersFiltersData[i].map((label: string) => (\r\n\t\t\t\t\t\t\t\t\t<Form.Check\r\n\t\t\t\t\t\t\t\t\t\tchecked={filterTypes.some((filter) => filter.value === label)}\r\n\t\t\t\t\t\t\t\t\t\tkey={label}\r\n\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\t\t\t\tlabel={label}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\tonFilter(e, label, filter);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t))}\r\n\r\n\t\t\t{type !== 'characters' &&\r\n\t\t\t\tfiltersTitles.map((filter: string, i: number) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div key={i}>\r\n\t\t\t\t\t\t\t<Form.Label>{`Filter by ${filter.toLowerCase()}:`}</Form.Label>\r\n\t\t\t\t\t\t\t<Card className=\"mb-3 shadow-sm\">\r\n\t\t\t\t\t\t\t\t<InputGroup>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text\r\n\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\tdispatch(FetchData(type, undefined, undefined, filterInputs))\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={`fas ${\r\n\t\t\t\t\t\t\t\t\t\t\t\tfilter === 'name' ? 'fa-filter' : 'fa-search'\r\n\t\t\t\t\t\t\t\t\t\t\t} i-btn`}\r\n\t\t\t\t\t\t\t\t\t\t></i>\r\n\t\t\t\t\t\t\t\t\t</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\t\t\tvalue={filterInputs[filter]}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => onSearchChange(e.target.value, filter)}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder={`Enter ${filter.toLowerCase()}`}\r\n\t\t\t\t\t\t\t\t\t\tonKeyPress={keyPressHandler}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t</>\r\n\t);\r\n});\r\n","import React from 'react';\r\nimport { Card, Col, Container, Row } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { setModalData, setModalShow } from '../../redux/actions/appActions';\r\nimport { AppStateType } from '../../redux/reducers/rootReducer';\r\nimport { ITCharacter } from '../../types/interfaces';\r\nimport { Widgets } from '../common/widgets/Widgets ';\r\n\r\nexport const CharactersList: React.FC = () => {\r\n\tconst characters = useSelector(\r\n\t\t(state: AppStateType) => state.charactersPage.characters\r\n\t);\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst charactersFiltersData = {\r\n\t\tGender: ['Male', 'Female', 'Genderless'],\r\n\t\tStatus: ['Alive', 'Dead', 'Unknown'],\r\n\t\tSpecies: ['Human', 'Alien', 'Unknown'],\r\n\t};\r\n\tconst onClickHandler = (character: ITCharacter) => {\r\n\t\tdispatch(setModalData(character));\r\n\t\tdispatch(setModalShow(true));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col className=\"col-12 col-md-3\">\r\n\t\t\t\t\t<Widgets type=\"characters\" data={charactersFiltersData} />\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col className=\"col-12 col-md-9\">\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t{characters.map((character) => (\r\n\t\t\t\t\t\t\t<Col\r\n\t\t\t\t\t\t\t\tclassName=\"col-12 col-sm-6 col-md-4 mb-4\"\r\n\t\t\t\t\t\t\t\tonClick={() => onClickHandler(character)}\r\n\t\t\t\t\t\t\t\tkey={character.name}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Card id={`${character.id}`} className=\"shadow-sm character\">\r\n\t\t\t\t\t\t\t\t\t<Card.Img variant=\"top\" src={character.image} className=\"card-image\" />\r\n\t\t\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t\t\t<Card.Title className=\"text-center my-2\">{character.name}</Card.Title>\r\n\t\t\t\t\t\t\t\t\t\t<Card.Text className=\"d-flex align-items-center justify-content-between\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-venus-mars pr-3\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span> {character.gender}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-users pr-3\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span> {character.species}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"far fa-user pr-3\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span> {character.status}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t</Card.Text>\r\n\t\t\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport { Col, Container, Row, Table } from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { AppStateType } from '../../redux/reducers/rootReducer';\r\nimport { getCorrectDate } from '../../utils/getCorrectDate';\r\nimport { Widgets } from '../common/widgets/Widgets ';\r\n\r\nexport const EpisodesList: React.FC = () => {\r\n\tconst episodes = useSelector(\r\n\t\t(state: AppStateType) => state.episodesPage.episodes\r\n\t);\r\n\r\n\tconst episodesFiltersData = {\r\n\t\tname: '',\r\n\t\tepisode: '',\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col className=\"col-12 col-md-3\">\r\n\t\t\t\t\t<Widgets type=\"episodes\" data={episodesFiltersData} />\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col className=\"col-12 col-md-9\">\r\n\t\t\t\t\t<Table striped bordered hover className=\"shadow-sm\">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th>#</th>\r\n\t\t\t\t\t\t\t\t<th>Name</th>\r\n\t\t\t\t\t\t\t\t<th>Episode</th>\r\n\t\t\t\t\t\t\t\t<th>Air date</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{episodes.map((episode) => (\r\n\t\t\t\t\t\t\t\t<tr key={episode.id}>\r\n\t\t\t\t\t\t\t\t\t<td>{episode.id}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{episode.name}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{episode.episode}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{getCorrectDate(episode.air_date)}</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</Table>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport { Col, Container, Row, Table } from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { AppStateType } from '../../redux/reducers/rootReducer';\r\nimport { Widgets } from '../common/widgets/Widgets ';\r\n\r\nexport const LocationsList: React.FC = () => {\r\n\tconst locations = useSelector(\r\n\t\t(state: AppStateType) => state.locationsPage.locations\r\n\t);\r\n\r\n\tconst locationsFiltersData = {\r\n\t\tname: '',\r\n\t\ttype: '',\r\n\t\tdimension: '',\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col className=\"col-12 col-md-3\">\r\n\t\t\t\t\t<Widgets type=\"locations\" data={locationsFiltersData} />\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col className=\"col-12 col-md-9\">\r\n\t\t\t\t\t<Table striped bordered hover className=\"shadow-sm\">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th>#</th>\r\n\t\t\t\t\t\t\t\t<th>Name</th>\r\n\t\t\t\t\t\t\t\t<th>Type</th>\r\n\t\t\t\t\t\t\t\t<th>Dimension</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{locations.map((location) => (\r\n\t\t\t\t\t\t\t\t<tr key={location.id}>\r\n\t\t\t\t\t\t\t\t\t<td>{location.id}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{location.name}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{location.type}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{location.dimension}</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</Table>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport { Col, Container, Pagination, Row } from 'react-bootstrap';\r\n\r\ninterface PaginationComponentProps {\r\n\ttype: string;\r\n\tactivePage: number;\r\n\tcount: number;\r\n\ttotalPages: number;\r\n\tonPageChange: (page: number) => void;\r\n}\r\n\r\nexport const PaginationComponent: React.FC<PaginationComponentProps> = ({\r\n\ttotalPages,\r\n\tcount,\r\n\tonPageChange,\r\n\tactivePage,\r\n\ttype,\r\n}) => {\r\n\tconst getRange = (from: number, to: number, step: number = 1): number[] => {\r\n\t\tlet i = from;\r\n\t\tconst range = [];\r\n\r\n\t\twhile (i <= to) {\r\n\t\t\trange.push(i);\r\n\t\t\ti += step;\r\n\t\t}\r\n\t\treturn range;\r\n\t};\r\n\r\n\tconst onClickHandler = (page: number, e?: React.MouseEvent) => {\r\n\t\tonPageChange(page);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col className=\"col-12 col-md-6\">\r\n\t\t\t\t\t<h3 className=\"border-right border-danger m-0 my-4\">\r\n\t\t\t\t\t\t<span className=\"text-secondary\">{count} </span>\r\n\t\t\t\t\t\t{type.slice(0, 1).toUpperCase() + type.slice(1)} |{' '}\r\n\t\t\t\t\t\t<span className=\"text-secondary\">{`Page ${\r\n\t\t\t\t\t\t\tactivePage > totalPages ? onPageChange(1) : activePage\r\n\t\t\t\t\t\t} / ${totalPages}`}</span>\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Pagination className=\"my-4 float-end\">\r\n\t\t\t\t\t\t<Pagination.First\r\n\t\t\t\t\t\t\tonClick={() => onClickHandler(1)}\r\n\t\t\t\t\t\t\tdisabled={activePage < 4}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Pagination.Prev\r\n\t\t\t\t\t\t\tdisabled={activePage < 2}\r\n\t\t\t\t\t\t\tonClick={() => onClickHandler(activePage - 1)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{totalPages <= 4 && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t{getRange(1, totalPages).map((page) => (\r\n\t\t\t\t\t\t\t\t\t<Pagination.Item\r\n\t\t\t\t\t\t\t\t\t\tactive={page === activePage}\r\n\t\t\t\t\t\t\t\t\t\tkey={page}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => onClickHandler(page)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{page}\r\n\t\t\t\t\t\t\t\t\t</Pagination.Item>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{activePage <= 3 && totalPages > 4 && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t{getRange(1, 4).map((page) => (\r\n\t\t\t\t\t\t\t\t\t<Pagination.Item\r\n\t\t\t\t\t\t\t\t\t\tactive={page === activePage}\r\n\t\t\t\t\t\t\t\t\t\tkey={page}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => onClickHandler(page)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{page}\r\n\t\t\t\t\t\t\t\t\t</Pagination.Item>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t<Pagination.Ellipsis onClick={() => onClickHandler(activePage + 3)} />\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{activePage > 3 && activePage < totalPages - 2 && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Pagination.Ellipsis onClick={() => onClickHandler(activePage - 3)} />\r\n\t\t\t\t\t\t\t\t{getRange(activePage - 1, activePage + 1).map((page) => (\r\n\t\t\t\t\t\t\t\t\t<Pagination.Item\r\n\t\t\t\t\t\t\t\t\t\tactive={page === activePage}\r\n\t\t\t\t\t\t\t\t\t\tkey={page}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => onClickHandler(page)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{page}\r\n\t\t\t\t\t\t\t\t\t</Pagination.Item>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t<Pagination.Ellipsis onClick={() => onClickHandler(activePage + 3)} />\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{activePage >= totalPages - 2 && totalPages > 4 && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Pagination.Ellipsis onClick={() => onClickHandler(activePage - 3)} />\r\n\t\t\t\t\t\t\t\t{getRange(totalPages - 3, totalPages).map((page) => (\r\n\t\t\t\t\t\t\t\t\t<Pagination.Item\r\n\t\t\t\t\t\t\t\t\t\tactive={page === activePage}\r\n\t\t\t\t\t\t\t\t\t\tkey={page}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => onClickHandler(page)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{page}\r\n\t\t\t\t\t\t\t\t\t</Pagination.Item>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<Pagination.Next\r\n\t\t\t\t\t\t\tdisabled={activePage === totalPages}\r\n\t\t\t\t\t\t\tonClick={() => onClickHandler(activePage + 1)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Pagination.Last\r\n\t\t\t\t\t\t\tonClick={() => onClickHandler(totalPages)}\r\n\t\t\t\t\t\t\tdisabled={activePage === totalPages}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Pagination>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t);\r\n};\r\n","import React from 'react';\r\n\r\nimport './preloader.css';\r\n\r\nexport const PreLoader: React.FC = () => (\r\n\t<div className=\"d-flex w-100 vh-100 justify-content-center align-items-center\">\r\n\t\t<div className=\"lds-hourglass\"></div>\r\n\t</div>\r\n);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { FetchData } from '../../../redux/actions/appActions';\r\nimport { AppStateType } from '../../../redux/reducers/rootReducer';\r\nimport { CharactersList } from '../../Characters/CharactersList';\r\nimport { EpisodesList } from '../../Episodes/EpisodesList';\r\nimport { LocationsList } from '../../Locations/LocationsList';\r\nimport { PaginationComponent } from '../Pagination/Pagination';\r\nimport { PreLoader } from '../Preloader/Preloader';\r\n\r\ninterface MainContainerComponentProps {\r\n\tcount: number;\r\n\ttotalPages: number;\r\n\ttype: string;\r\n}\r\n\r\nexport const MainContainer: React.FC<MainContainerComponentProps> = ({\r\n\tcount,\r\n\ttotalPages,\r\n\ttype,\r\n}) => {\r\n\tconst [activePage, setActivePage] = useState(1);\r\n\tconst dispatch = useDispatch();\r\n\tconst loading = useSelector((state: AppStateType) => state.app.loading);\r\n\tconst filterTypes = useSelector(\r\n\t\t(state: AppStateType) => state.app.filterTypes\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(FetchData(type, activePage, filterTypes));\r\n\t}, []);\r\n\r\n\tconst onPageChange = (page: number) => {\r\n\t\tsetActivePage(page);\r\n\t\tdispatch(FetchData(type, page, filterTypes));\r\n\t};\r\n\r\n\tif (!totalPages || loading) {\r\n\t\treturn <PreLoader />;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container className=\"d-flex flex-column align-items-center\">\r\n\t\t\t<PaginationComponent\r\n\t\t\t\tcount={count}\r\n\t\t\t\ttotalPages={totalPages}\r\n\t\t\t\tonPageChange={onPageChange}\r\n\t\t\t\tactivePage={activePage}\r\n\t\t\t\ttype={type}\r\n\t\t\t/>\r\n\t\t\t{type === 'characters' && <CharactersList />}\r\n\t\t\t{type === 'episodes' && <EpisodesList />}\r\n\t\t\t{type === 'locations' && <LocationsList />}\r\n\t\t</Container>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { AppStateType } from '../../redux/reducers/rootReducer';\r\nimport { MainContainer } from '../common/container/Container';\r\n\r\nexport const CharactersPage: React.FC = () => {\r\n\tconst totalPages = useSelector(\r\n\t\t(state: AppStateType) => state.charactersPage.info.pages\r\n\t);\r\n\tconst count = useSelector(\r\n\t\t(state: AppStateType) => state.charactersPage.info.count\r\n\t);\r\n\r\n\treturn (\r\n\t\t<MainContainer totalPages={totalPages} count={count} type=\"characters\" />\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { AppStateType } from '../../redux/reducers/rootReducer';\r\nimport { MainContainer } from '../common/container/Container';\r\n\r\nexport const EpisodesPage: React.FC = () => {\r\n\tconst totalPages = useSelector(\r\n\t\t(state: AppStateType) => state.episodesPage.info.pages\r\n\t);\r\n\tconst count = useSelector(\r\n\t\t(state: AppStateType) => state.episodesPage.info.count\r\n\t);\r\n\r\n\treturn <MainContainer totalPages={totalPages} count={count} type=\"episodes\" />;\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { AppStateType } from '../../redux/reducers/rootReducer';\r\nimport { MainContainer } from '../common/container/Container';\r\n\r\nexport const LocationsPage: React.FC = () => {\r\n\tconst totalPages = useSelector(\r\n\t\t(state: AppStateType) => state.locationsPage.info.pages\r\n\t);\r\n\tconst count = useSelector(\r\n\t\t(state: AppStateType) => state.locationsPage.info.count\r\n\t);\r\n\r\n\treturn (\r\n\t\t<MainContainer totalPages={totalPages} count={count} type=\"locations\" />\r\n\t);\r\n};\r\n","import React, { useRef } from 'react';\r\nimport { Container, Form, FormControl, InputGroup } from 'react-bootstrap';\r\n\r\ninterface WatchListFormProps {\r\n\tonAdd(title: string): void;\r\n}\r\n\r\nexport const WatchListForm: React.FC<WatchListFormProps> = (props) => {\r\n\tconst ref = useRef<HTMLInputElement>(null);\r\n\r\n\tconst keyPressHandler = (event: React.KeyboardEvent) => {\r\n\t\tif (event.key === 'Enter') {\r\n\t\t\tprops.onAdd(ref.current!.value);\r\n\t\t\tref.current!.value = '';\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container className=\"mt-3 col-lg-6\">\r\n\t\t\t<Form.Label htmlFor=\"title\">\r\n\t\t\t\t<h4>Enter an episode title:</h4>\r\n\t\t\t</Form.Label>\r\n\t\t\t<InputGroup size=\"lg\">\r\n\t\t\t\t<InputGroup.Text>\r\n\t\t\t\t\t<i className=\"fas fa-list-alt\"></i>\r\n\t\t\t\t</InputGroup.Text>\r\n\t\t\t\t<FormControl\r\n\t\t\t\t\tonKeyPress={keyPressHandler}\r\n\t\t\t\t\tref={ref}\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tid=\"title\"\r\n\t\t\t\t\tplaceholder=\"Enter an episode title\"\r\n\t\t\t\t/>\r\n\t\t\t</InputGroup>\r\n\t\t</Container>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport { Container, Form, ListGroup } from 'react-bootstrap';\r\n\r\nimport { ITWatchListItem } from '../../types/interfaces';\r\n\r\ntype WatchListProps = {\r\n\ttoDos: ITWatchListItem[];\r\n\tonToggle: (id: number) => void;\r\n\tonRemove: (id: number) => void;\r\n};\r\n\r\nexport const WatchList: React.FC<WatchListProps> = ({\r\n\ttoDos,\r\n\tonRemove,\r\n\tonToggle,\r\n}) => {\r\n\tif (!toDos.length) {\r\n\t\treturn <h3 className=\"text-center my-4\">You haven't planned anything yet.</h3>;\r\n\t}\r\n\r\n\tconst removeHandler = (event: React.MouseEvent, id: number) => {\r\n\t\tevent.preventDefault();\r\n\t\tonRemove(id);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container className=\"col-lg-6 mt-3\">\r\n\t\t\t<ListGroup>\r\n\t\t\t\t{toDos.map((episode) => {\r\n\t\t\t\t\tconst classes = ['todo', 'success'];\r\n\t\t\t\t\tif (episode.completed) {\r\n\t\t\t\t\t\tclasses.push('completed');\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<ListGroup.Item\r\n\t\t\t\t\t\t\tvariant={episode.completed ? 'success' : ''}\r\n\t\t\t\t\t\t\tclassName={classes.join(' ')}\r\n\t\t\t\t\t\t\tkey={episode.id}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t\t<Form.Check\r\n\t\t\t\t\t\t\t\t\tchecked={episode.completed}\r\n\t\t\t\t\t\t\t\t\tonChange={onToggle.bind(null, episode.id)}\r\n\t\t\t\t\t\t\t\t\tclassName=\"my-1\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<span>{episode.title}</span>\r\n\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\tclassName=\"fas fa-trash-alt\"\r\n\t\t\t\t\t\t\t\t\tonClick={(event) => removeHandler(event, episode.id)}\r\n\t\t\t\t\t\t\t\t></i>\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</ListGroup>\r\n\t\t</Container>\r\n\t);\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { ITWatchListItem } from '../../types/interfaces';\r\nimport { WatchListForm } from './WatchListForm';\r\nimport { WatchList } from './WatchList';\r\n\r\ndeclare var confirm: (question: string) => boolean;\r\n\r\nexport const MyWatchListPage: React.FC = () => {\r\n\tconst [watchList, setWatchList] = useState<ITWatchListItem[]>([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst saved = JSON.parse(\r\n\t\t\tlocalStorage.getItem('watchList') || '[]'\r\n\t\t) as ITWatchListItem[];\r\n\t\tsetWatchList(saved);\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem('watchList', JSON.stringify(watchList));\r\n\t}, [watchList]);\r\n\r\n\tconst addHandler = (title: string) => {\r\n\t\tconst newWatchListItem: ITWatchListItem = {\r\n\t\t\ttitle,\r\n\t\t\tid: Date.now(),\r\n\t\t\tcompleted: false,\r\n\t\t};\r\n\t\tsetWatchList((prev) => [newWatchListItem, ...prev]);\r\n\t};\r\n\r\n\tconst toggleHandler = (id: number) => {\r\n\t\tsetWatchList(\r\n\t\t\twatchList.map((episode) => {\r\n\t\t\t\tif (episode.id === id) {\r\n\t\t\t\t\tepisode.completed = !episode.completed;\r\n\t\t\t\t}\r\n\t\t\t\treturn episode;\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n\r\n\tconst removeHandler = (id: number) => {\r\n\t\tconst shouldRemove = confirm('Are you sure you want to delete this episode?');\r\n\t\tif (shouldRemove) {\r\n\t\t\tsetWatchList((prev) => prev.filter((episode) => episode.id !== id));\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<WatchListForm onAdd={addHandler} />\r\n\t\t\t<WatchList\r\n\t\t\t\ttoDos={watchList}\r\n\t\t\t\tonRemove={removeHandler}\r\n\t\t\t\tonToggle={toggleHandler}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n","import { Switch, Route } from 'react-router';\r\n\r\nimport { CharactersPage } from './components/Characters/CharactersPage';\r\nimport { EpisodesPage } from './components/Episodes/EpisodesPage';\r\nimport { LocationsPage } from './components/Locations/LocationsPage';\r\nimport { MyWatchListPage } from './components/WatchList/MyWatchListPage';\r\n\r\nexport const Routes: React.FC = () => {\r\n\treturn (\r\n\t\t<Switch>\r\n\t\t\t<Route path=\"/\" exact component={CharactersPage} />\r\n\t\t\t<Route path=\"/characters-list\" component={CharactersPage} />\r\n\t\t\t<Route path=\"/episodes\" component={EpisodesPage} />\r\n\t\t\t<Route path=\"/locations\" component={LocationsPage} />\r\n\t\t\t<Route path=\"/my-watch-list\" component={MyWatchListPage} />\r\n\t\t</Switch>\r\n\t);\r\n};\r\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\n\nimport { ModalWindow } from './components/common/Modal/Modal';\nimport { NavBar } from './components/NavBar/NavBar';\nimport { Alerts } from './components/common/alerts/Alert';\nimport { Routes } from './Routes';\n\nimport './App.css';\n\nconst App: React.FC = () => {\n\treturn (\n\t\t<Container className=\"f-height bg-light px-0\" fluid>\n\t\t\t<BrowserRouter>\n\t\t\t\t<NavBar />\n\t\t\t\t<Alerts />\n\t\t\t\t<Routes />\n\t\t\t\t<ModalWindow />\n\t\t\t</BrowserRouter>\n\t\t</Container>\n\t);\n};\n\nexport default App;\n","import { ITCharacter } from './../../types/interfaces';\r\nimport { ActionsTypesAPP, filterType } from './../actions/actionsTypes';\r\nimport {\r\n\tSET_FILTER_INPUT,\r\n\tSET_FILTER_TYPES,\r\n\tSET_LOADING,\r\n\tSET_MODAL_DATA,\r\n\tSET_MODAL_SHOW,\r\n\tSET_SHOW_ALERT,\r\n} from '../types';\r\n\r\nconst initialState = {\r\n\tloading: false,\r\n\tmodalShow: false,\r\n\tmodalData: {} as ITCharacter,\r\n\tfilterTypes: [] as { filter: string; value: string }[],\r\n\tfilterInputs: {\r\n\t\tname: '',\r\n\t\tepisode: '',\r\n\t} as filterType,\r\n\talertData: {} as {\r\n\t\ttype: string;\r\n\t\ttext: string;\r\n\t\tshow: boolean;\r\n\t},\r\n};\r\n\r\ntype InitialState = typeof initialState;\r\n\r\nexport const appReducer = (\r\n\tstate = initialState,\r\n\taction: ActionsTypesAPP\r\n): InitialState => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_LOADING:\r\n\t\t\treturn { ...state, loading: action.payload };\r\n\t\tcase SET_MODAL_SHOW:\r\n\t\t\treturn { ...state, modalShow: action.payload };\r\n\t\tcase SET_MODAL_DATA:\r\n\t\t\treturn { ...state, modalData: action.data };\r\n\t\tcase SET_FILTER_TYPES:\r\n\t\t\tconst types = action.checked\r\n\t\t\t\t? [...state.filterTypes, { filter: action.filter, value: action.value }]\r\n\t\t\t\t: state.filterTypes.filter((filter) => filter.value !== action.value);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfilterTypes: types,\r\n\t\t\t};\r\n\t\tcase SET_FILTER_INPUT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfilterInputs: { ...state.filterInputs, [action.filter]: action.inputs },\r\n\t\t\t};\r\n\t\tcase SET_SHOW_ALERT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\talertData: action.value,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import { ActionsTypesCharacters } from './../actions/actionsTypes';\r\nimport { ITCharacter, ITInformation } from './../../types/interfaces';\r\nimport { FETCH_CHARACTERS, SET_INFORMATION_CHARACTERS } from '../types';\r\n\r\nconst initialState = {\r\n\tcharacters: [] as ITCharacter[],\r\n\tinfo: {} as ITInformation,\r\n\tcharactersFilter: {\r\n\t\tGender: ['Male', 'Female', 'Genderless'],\r\n\t\tStatus: ['Alive', 'Dead', 'Unknown'],\r\n\t\tSpecies: ['Human', 'Alien', 'Unknown'],\r\n\t},\r\n};\r\n\r\ntype InitialState = typeof initialState;\r\n\r\nexport const charactersPageReducer = (\r\n\tstate = initialState,\r\n\taction: ActionsTypesCharacters\r\n): InitialState => {\r\n\tswitch (action.type) {\r\n\t\tcase FETCH_CHARACTERS:\r\n\t\t\treturn { ...state, characters: action.characters };\r\n\t\tcase SET_INFORMATION_CHARACTERS:\r\n\t\t\treturn { ...state, info: action.information };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import { ActionsTypesEpisodes } from './../actions/actionsTypes';\r\nimport { ITEpisode, ITInformation } from './../../types/interfaces';\r\nimport { FETCH_EPISODES, SET_INFORMATION_EPISODES } from './../types';\r\n\r\nconst initialState = {\r\n\tepisodes: [] as ITEpisode[],\r\n\tinfo: {} as ITInformation,\r\n};\r\n\r\ntype InitialState = typeof initialState;\r\n\r\nexport const episodesPageReducer = (\r\n\tstate = initialState,\r\n\taction: ActionsTypesEpisodes\r\n): InitialState => {\r\n\tswitch (action.type) {\r\n\t\tcase FETCH_EPISODES:\r\n\t\t\treturn { ...state, episodes: action.episodes };\r\n\t\tcase SET_INFORMATION_EPISODES:\r\n\t\t\treturn { ...state, info: action.information };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import { ActionsTypesLocations } from './../actions/actionsTypes';\r\nimport { ITLocations, ITInformation } from './../../types/interfaces';\r\nimport { FETCH_LOCATIONS, SET_INFORMATION_LOCATIONS } from '../types';\r\n\r\nconst initialState = {\r\n\tlocations: [] as ITLocations[],\r\n\tinfo: {} as ITInformation,\r\n};\r\n\r\ntype InitialState = typeof initialState;\r\n\r\nexport const locationsPageReducer = (\r\n\tstate = initialState,\r\n\taction: ActionsTypesLocations\r\n): InitialState => {\r\n\tswitch (action.type) {\r\n\t\tcase FETCH_LOCATIONS:\r\n\t\t\treturn { ...state, locations: action.locations };\r\n\t\tcase SET_INFORMATION_LOCATIONS:\r\n\t\t\treturn { ...state, info: action.information };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { appReducer } from './app';\r\n\r\nimport { charactersPageReducer } from './characters';\r\nimport { episodesPageReducer } from './episodes';\r\nimport { locationsPageReducer } from './locations';\r\n\r\nconst rootReducer = combineReducers({\r\n\tcharactersPage: charactersPageReducer,\r\n\tepisodesPage: episodesPageReducer,\r\n\tlocationsPage: locationsPageReducer,\r\n\tapp: appReducer,\r\n});\r\ntype RootReducerType = typeof rootReducer;\r\nexport type AppStateType = ReturnType<RootReducerType>;\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { createStore, applyMiddleware } from 'redux';\n\nimport App from './App';\nimport rootReducer from './redux/reducers/rootReducer';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nconst store = createStore(\n\trootReducer,\n\tcomposeWithDevTools(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}